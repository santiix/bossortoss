---
import '../styles/global.css';
import { SITE_TITLE } from '../consts';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import type { ImageMetadata } from 'astro';

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata;
}

const { title, description, image = FallbackImage } = Astro.props;

const canonicalURL =
  typeof Astro.site === 'string'
    ? new URL(Astro.url.pathname, Astro.site)
    : Astro.url;

const rssURL =
  typeof Astro.site === 'string'
    ? new URL('rss.xml', Astro.site)
    : null;

const ogImageURL =
  typeof Astro.url === 'object' && image?.src
    ? new URL(image.src, Astro.url)
    : '/default-og-image.jpg';
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />

{rssURL && (
  <link
    rel="alternate"
    type="application/rss+xml"
    title={SITE_TITLE}
    href={rssURL.toString()}
  />
)}

<meta name="generator" content={Astro.generator} />


<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL.toString()} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url.toString()} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImageURL.toString()} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url.toString()} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={ogImageURL.toString()} />
